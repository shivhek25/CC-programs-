Time limit: 1 sec
Source limit: 50,000 bytes

Chef likes solving problems involving a lot of queries with prime numbers. One day, he found a new problem which is difficult for him to solve. So, he needs your help to solve it.

Given an array a of N integers and Q queries where each query provides you with four integers L, R, X and Y.

For each query, output the value of F(L, R, X, Y) as defined below.


F(L, R, X, Y) {

     result := 0
     for( i = X to i = Y )  {
         if( isPrime(i) ) {
             for( j = L to j = R ) {
                  number := a[j]
                  exponent := 0
                  while( number % i == 0 ) {
                     exponent := exponent + 1
                     number := number/i
                  }
                  result := result + exponent
              }
         }
     }
     return result
}

isPrime(x) returns true if x is Prime otherwise false.

Input
First line of the input contains a single integer N denoting the number of elements in a given array.
Next line contains N integers separated by a space, which denotes a[1], a[2], ..., a[n].
Third line contains Q denoting the number of queries.
Next Q lines contain four integers L , R , X , Y separated by a space.
Output
Output the value for each F(L, R, X, Y) in a separate line.

Constraints
1 ≤ N, Q ≤ 105
1 ≤ L ≤ R ≤ N
1 ≤ X ≤ Y ≤ 106
2 ≤ a[i] ≤ 106 , where 1 ≤ i ≤ N
Subtasks
Subtask #1 (10 points): 1 ≤ N, Q ≤ 100
Subtask #2 (20 points): 1 ≤ N, Q ≤ 1000
Subtask #3 (70 points): Original constraints
Example
Input:
4
2 3 4 5
2
1 3 2 3
1 4 2 5

Output:
4
5
